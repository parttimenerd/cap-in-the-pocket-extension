name: Build and Release Extension

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install dependencies
        run: npm ci
        
      - name: Compile TypeScript
        run: npm run compile
        
      - name: Install vsce
        run: npm install -g @vscode/vsce
        
      - name: Package Extension
        run: vsce package
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: "*.vsix"
          
  release:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: vsix-package
          
      - name: Get package info
        id: package
        run: |
          VSIX_PATH=$(ls *.vsix)
          echo "vsix_path=$VSIX_PATH" >> $GITHUB_OUTPUT
          VERSION=$(echo $VSIX_PATH | grep -oP 'cap-in-the-pocket-\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.package.outputs.vsix_path }}
          tag_name: v${{ steps.package.outputs.version }}-snapshot-${{ steps.package.outputs.commit_sha }}
          name: Snapshot v${{ steps.package.outputs.version }}-${{ steps.package.outputs.commit_sha }}
          body: |
            Automated snapshot build from commit ${{ github.sha }}
            
            ## How to install
            1. Download the .vsix file from this release
            2. In VS Code, go to Extensions (Ctrl+Shift+X)
            3. Click the "..." menu in the top-right of the Extensions view
            4. Select "Install from VSIX..."
            5. Browse to the downloaded file
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}